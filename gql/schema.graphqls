input AudioInput {
  text: String!
  voice: String!
  title: String!
}

input AudioTrunkInput {
  text: String!
  voice: String!
  id: Int!
}

input EditAudioInput {
  id: Int!
  title: String!
  transcript: String!
}

input SignupInput {
  extId: String!
  email: String!
}

input BookInput {
  title: String!
}

input ImagePromptInput {
  id: Int!
  prompt: String!
}

type Audio {
  url: String!
  transcriptUrl: String!
  title: String!
  id: Int!
}

type ShortURL {
  id: ID!
  longURL: String!
  shortURL: String!
}

input CreateVideoPreviewInput {
  images: [String!]
  contentTrunks: [String!]
}

type Query {
  # get all audios without filtering
  getAudios: [Audio!]!
  getAudio(id: Int): Audio!
  # get audios for an authenticated member
  getAudiosForMember: [Audio!]!
  getShortURL(id: ID!): ShortURL
  getLongURL(shortURL: String!): String!
}

scalar Upload

type Mutation {
  signUp(input: SignupInput): Int!
  createAudio(input: AudioInput!): Audio!
  createAllAudios(input: [AudioInput!]): [Audio!]!
  editAudio(input: EditAudioInput!): Audio!
  createBookSummary(input: BookInput): String!
  createShortURL(longURL: String!): ShortURL!
  generateImage(input: ImagePromptInput!): String!
  generateAllImages(input: [ImagePromptInput!]): [String!]!
  createVideoPreview(input: CreateVideoPreviewInput!): String!
  createAudioTrunk(input: AudioTrunkInput!): String!
}