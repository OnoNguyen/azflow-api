trigger:
  - main

variables:
  # Container registry details
  acrName: azflow
  imageName: azflow-api
  tag: $(Build.BuildId)

  # Azure Resource Manager details
  subscriptionId: '05f2113e-370b-4489-ae25-7d9e721459fc'
  resourceGroupName: 'azflow_group'
  clusterName: 'azflow'

  GOBIN: '$(GOPATH)/bin' # Go binaries path
  GOROOT: '/usr/local/go1.22' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code

stages:
  - stage: Build
    jobs:
      - job: Build
        pool:
          vmImage: 'ubuntu-latest'
        steps:
        - task: GoTool@0
          displayName: 'Use Go 1.22'

        - task: Go@0
          displayName: 'go get'
          inputs:
            arguments: '-d'

        - task: Go@0
          displayName: 'go build'
          inputs:
            command: build
            arguments: '-o "$(System.TeamProject).exe"'

        - task: ArchiveFiles@2
          displayName: 'Archive files'
          inputs:
            rootFolderOrFile: '$(Build.Repository.LocalPath)'
            includeRootFolder: False

        - task: PublishBuildArtifacts@1
          displayName: 'Publish artifact'
          condition: succeededOrFailed()

        - task: Docker@2
          inputs:
            containerRegistry: '$(acrName)'
            repository: '$(imageName)'
            command: 'buildAndPush'
            Dockerfile: '**/Dockerfile'
            tags: |
              $(tag)
              latest
        - publish: $(Pipeline.Workspace)/.docker/repository
          artifact: 'drop'

  - stage: Deploy
    jobs:
      - deployment: Deploy
        environment: 'aks'
        pool:
          vmImage: 'ubuntu-latest'
        strategy:
          runOnce:
            deploy:
              steps:
                - task: Kubernetes@1
                  inputs:
                    connectionType: 'Azure Resource Manager'
                    azureSubscription: '$(subscriptionId)'
                    azureResourceGroup: '$(resourceGroupName)'
                    kubernetesCluster: '$(clusterName)'
                    namespace: 'default'
                    command: 'apply'
                    useConfigurationFile: true
                    configuration: '$(Pipeline.Workspace)/deployment.yml'
                    secretType: 'dockerRegistry'
                    containerRegistryType: 'Azure Container Registry'
                    azureContainerRegistry: '$(acrName).azurecr.io'
                    secretName: 'acr-auth'
